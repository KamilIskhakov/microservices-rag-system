#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è RAG —Å–∏—Å—Ç–µ–º—ã –≤ Kubernetes

set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ RAG —Å–∏—Å—Ç–µ–º—ã –≤ Kubernetes..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ kubectl
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä—É"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º namespace
echo "üìÅ –°–æ–∑–¥–∞–µ–º namespace..."
kubectl apply -f namespace.yaml

# –°–æ–∑–¥–∞–µ–º ConfigMap
echo "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º ConfigMap..."
kubectl apply -f configmap.yaml

# –°–æ–∑–¥–∞–µ–º PersistentVolumeClaims
echo "üíæ –°–æ–∑–¥–∞–µ–º PersistentVolumeClaims..."
kubectl apply -f redis.yaml

# –ñ–¥–µ–º —Å–æ–∑–¥–∞–Ω–∏—è PVC
echo "‚è≥ –ñ–¥–µ–º —Å–æ–∑–¥–∞–Ω–∏—è PersistentVolumeClaims..."
kubectl wait --for=condition=Bound pvc/redis-pvc -n rag-system --timeout=60s
kubectl wait --for=condition=Bound pvc/models-pvc -n rag-system --timeout=60s
kubectl wait --for=condition=Bound pvc/logs-pvc -n rag-system --timeout=60s

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º Redis
echo "üìä –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º Redis..."
kubectl apply -f redis.yaml

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis
echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis..."
kubectl wait --for=condition=available deployment/redis-deployment -n rag-system --timeout=120s

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º AI Model Service
echo "ü§ñ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º AI Model Service..."
kubectl apply -f ai-model.yaml

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º API Gateway
echo "üåê –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º API Gateway..."
kubectl apply -f api-gateway.yaml

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º Ingress
echo "üîó –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º Ingress..."
kubectl apply -f ingress.yaml

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º HPA
echo "üìà –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º Horizontal Pod Autoscaler..."
kubectl apply -f hpa.yaml

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
kubectl wait --for=condition=available deployment/ai-model-deployment -n rag-system --timeout=300s
kubectl wait --for=condition=available deployment/api-gateway-deployment -n rag-system --timeout=120s

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
kubectl get pods -n rag-system
kubectl get services -n rag-system
kubectl get ingress -n rag-system

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: kubectl logs -f deployment/ai-model-deployment -n rag-system"
echo "  - –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ: kubectl scale deployment/api-gateway-deployment --replicas=5 -n rag-system"
echo "  - –£–¥–∞–ª–µ–Ω–∏–µ: kubectl delete namespace rag-system"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ API:"
echo "  - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π: api-gateway-service.rag-system.svc.cluster.local:8000"
echo "  - –í–Ω–µ—à–Ω–∏–π: —á–µ—Ä–µ–∑ LoadBalancer –∏–ª–∏ Ingress" 